# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Continuous Integration

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  continuous_integration:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    env:
      ASAAS_SANDBOX_TOKEN: ${{ secrets.ASAAS_SANDBOX_TOKEN }}
      ASAAS_SANDBOX_TOKEN_SUBACCOUNT_1: ${{ secrets.ASAAS_SANDBOX_TOKEN_SUBACCOUNT_1 }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: pre-commit/action@v3.0.1
      with:
        extra_args: --all-files

    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4

    - name: Install dependencies
      run: pdm install --with dev

    - name: Test with pytest
      run: |
        pdm run pytest --cov=src --cov-report=term --cov-report=xml tests

  continuous_delivery:
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4

      - name: Get Project Version
        id: project_version
        run: |
          pdm show --version -q > .version
          echo "version=$(cat .version)" >> "$GITHUB_OUTPUT"

      - name: Push Tag
        uses: laputansoft/github-tag-action@v4.6
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          tag: ${{ steps.project_version.outputs.version }}

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: v${{ steps.project_version.outputs.version }}
          tag: v${{ steps.project_version.outputs.version }}

      - name: Dispatch Deploy
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: "joepreludian/asaaspy"
          event-type: go-pypi
          client-payload: '{"release_tag": "v${{ steps.project_version.outputs.version }}"}'
